<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
https://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/data/jpa
https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
">
    <!--对Spring和SpringDataJPA进⾏配置-->
    <!--1、创建数据库连接池druid-->
    <!--引⼊外部资源⽂件-->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!--第三⽅jar中的bean定义在xml中-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driver" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    <!--2、配置⼀个JPA中⾮常重要的对象,entityManagerFactory
    entityManager类似于mybatis中的SqlSession
    entityManagerFactory类似于Mybatis中的SqlSessionFactory
    -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--配置⼀些细节.......-->
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--配置包扫描（pojo实体类所在的包） -->
        <property name="packagesToScan" value="com.gcgo.pojo" />
        <!--指定jpa的具体实现，也就是hibernate-->
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
        </property>
        <!--jpa⽅⾔配置,不同的jpa实现对于类似于beginTransaction等细节实现
        起来是不⼀样的，
        所以传⼊JpaDialect具体的实现类-->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <!--配置具体provider， hibearnte框架的执⾏细节-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--定义hibernate框架的⼀些细节-->
                <!--
                配置数据表是否⾃动创建因为我们会建⽴pojo和数据表之间的映射关系
                程序启动时，如果数据表还没有创建，是否要程序给创建⼀下
                -->
                <property name="generateDdl" value="false" />
                <!--
                指定数据库的类型
                hibernate本身是个dao层框架，可以⽀持多种数据库类型
                的，这⾥就指定本次使⽤的什么数据库
                -->
                <property name="database" value="MYSQL" />
                <!--
                配置数据库的⽅⾔
                hiberante可以帮助我们拼装sql语句，但是不同的数据库sql
                语法是不同的，所以需要我们注⼊具体的数据库⽅⾔
                -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
                <!--是否显示sql
                操作数据库时，是否打印sql
                -->
                <property name="showSql" value="true" />
            </bean>
        </property>
    </bean>
    <!--3、引⽤上⾯创建的entityManagerFactory
    <jpa:repositories> 配置jpa的dao层细节
    base-package:指定dao层接⼝所在包
    -->
    <jpa:repositories base-package="com.gcgo.dao" entity-manager-factory-ref="entityManagerFactory"
            transaction-manager-ref="transactionManager" />
    <!--4、事务管理器配置编写实体类 Resume，使⽤ JPA 注解配置映射关系
    jdbcTemplate/mybatis 使⽤的是DataSourceTransactionManager
    jpa规范： JpaTransactionManager
    -->

    <!--5、声明式事务配置-->
    <!--
    <tx:annotation-driven/>
    -->
    <!--6、配置spring包扫描-->
    <context:component-scan base-package="com.gcgo.dao" />
</beans>